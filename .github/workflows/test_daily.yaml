name: Daily Tests

on:
  push: 
    branches: 
      - fix-workflows-ko
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:
    inputs:
      test_level:
        description: "Niveau de tests à exécuter"
        required: true
        default: "standard"
        type: choice
        options:
          - "standard"
          - "extended"

env:
  PYTHON_VERSION: "3.11"
  GROQ_API_KEY: "test-secret-key-for-ci"
  MISTRAL_API_KEY: "test-secret-key-for-ci"

jobs:
  daily-tests:
    name: "Tests Complets"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage flake8 black tblib
      
      - name: Run Models tests
        working-directory: DreamProject
        run: |
          echo "Tests des modèles Django..."
          python manage.py test diary.tests.test_models --verbosity=2
      
      - name: Run Utils tests
        working-directory: DreamProject
        run: |
          echo "Tests des utilitaires..."
          python manage.py test diary.tests.test_utils --verbosity=2
      
      - name: Run Views tests
        working-directory: DreamProject
        run: |
          echo "Tests des vues Django..."
          python manage.py test diary.tests.test_views --verbosity=2
      
      - name: Run AI tests (Extended only)
        working-directory: DreamProject
        if: github.event.inputs.test_level == 'extended' || github.event_name == 'schedule'
        run: |
          echo "Tests IA (mode étendu)..."
          python manage.py test diary.tests.test_ai_functions --verbosity=2
      
      - name: Code quality checks
        run: |
          echo "Vérifications qualité du code..."
          
          echo "Formatage avec Black..."
          black --check --diff DreamProject/

          echo "Linting critique..."
          flake8 DreamProject/diary/ --count --select=E9,F63,F7,F82 --show-source --statistics
          
          echo "Statistiques générales..."
          flake8 DreamProject/diary/ --count --exit-zero --max-complexity=10 --statistics
      
      - name: Run coverage analysis
        run: |
          cd DreamProject
          echo "Analyse de couverture..."
          coverage run --source='diary' manage.py test diary.tests.test_models diary.tests.test_utils diary.tests.test_views
          coverage report --show-missing
          coverage html
      
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: DreamProject/htmlcov/
      
      - name: Test Summary
        if: always()
        run: |
          echo "=== RÉSUMÉ TESTS QUOTIDIENS ==="
          echo "Date: $(date)"
          echo "Branche: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          
          if [ "${{ job.status }}" = "success" ]; then
            echo " Tests quotidiens RÉUSSIS"
            echo "Toutes les suites de tests ont passé avec succès"
          else
            echo "Échecs détectés dans les tests quotidiens"
            echo "Vérifier les logs ci-dessus pour plus de détails"
          fi
          
          echo "Niveau de test: ${{ github.event.inputs.test_level || 'standard' }}"